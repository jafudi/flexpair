Content-Type: multipart/mixed; boundary="====Part=Boundary================================================="
MIME-Version: 1.0

--====Part=Boundary=================================================
Content-Type: text/cloud-config; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="cloud-config.yaml"

#cloud-config

users:
  - default

# Set the system timezone
timezone: Europe/Berlin

--====Part=Boundary=================================================
Content-Type: text/x-shellscript; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="100-pull-latest-release.sh"

#!/usr/bin/env bash

# Check whether required packages are installed ####################

packages=("git" "docker.io" "lubuntu-desktop" "kdialog" "x11vnc")

for pkg in ${packages[@]}; do
    is_pkg_installed=$(dpkg-query -W --showformat='${Status}\n' ${pkg} | grep "install ok installed")

    if [ "${is_pkg_installed}" == "install ok installed" ]; then
        echo ${pkg} is installed.
    else
        echo Missing package ${pkg}! Skip further execution.
        exit 0
    fi
done

# Checkout Git repository HEAD revision ############################

cd /var/tmp
rm -rf traction
git clone --depth 1 https://github.com/jafudi/traction.git --branch master
sudo chmod 777 -R traction

# Deploy actual application ########################################

cat << EOF | sudo tee /home/ubuntu/Desktop/ideops.desktop
[Desktop Entry]
Type=Application
Terminal=true
Exec=/var/tmp/traction/run_app.sh
Icon=QMPlay2
Name=Hier klicken
EOF
sudo chmod +x /home/ubuntu/Desktop/ideops.desktop

docker pull --quiet jafudi/idea-extractor:latest &

# Provision Guacamole stack ########################################

export GUACAMOLE_HOME=/var/tmp/traction/guacamole
cd ${GUACAMOLE_HOME}
sudo ./init-auth-db.sh
sudo ./init-letsencrypt.sh

# Install GitLab runner ############################################

echo "\n\nInstall Python packages required for testing on guest OS..."
DEBIAN_FRONTEND=noninteractive apt-get install --upgrade -y --no-install-recommends python3-pip
pip3 install setuptools
pip3 install behave invoke jsonschema

echo "\n\nInstall Gitlab Runnner for uploading artifacts from guest VM..."
curl --silent -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bash
apt-get install --upgrade -y gitlab-runner traceroute

echo 'gitlab-runner ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
usermod -aG docker gitlab-runner

mkdir -p builds
chmod --recursive 777 builds
rm -f .bash_logout

# Register GitLab runner ###########################################

sudo gitlab-runner unregister --all-runners
sudo rm -f /etc/gitlab-runner/config.toml

DESCRIPTION="Shell executor on $(uname -s)"

HOST_TAGS="$( \
    hostnamectl \
    | sed -E -e 's/^[ ]*//;s/[^a-zA-Z0-9\.]+/-/g;s/(.*)/\L\1/;' \
    | tr '\n' ',' \
)"

ROUTE_TAGS="$( \
    traceroute --max-hops=3 8.8.8.8 \
    | sed -E -e '1d;s/^[ ]+[0-9][ ]+([a-zA-Z]+?).*/\1/;/^$/d;s/^/gateway-/' \
    | tr '\n' ',' \
)"

sudo gitlab-runner register \
--non-interactive \
--url="https://gitlab.com/" \
--registration-token="JW6YYWLG4mTsr_-mSaz8" \
--executor="shell" \
--description="${DESCRIPTION}" \
--tag-list="${HOST_TAGS},${ROUTE_TAGS}"

sudo gitlab-runner restart
sudo gitlab-runner status

--====Part=Boundary=================================================--
